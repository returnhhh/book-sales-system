<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.orderManagement.mapper.OrderMapper">
    
    <resultMap type="Order" id="OrderResult">
        <result property="orderId"    column="order_id"    />
        <result property="userName"    column="user_name"    />
        <result property="bookName"    column="book_name"    />
        <result property="bookId"    column="book_id"    />
        <result property="price"    column="price"    />
        <result property="num"    column="num"    />
        <result property="allPrice"    column="all_price"    />
        <result property="contactName"    column="contact_name"    />
        <result property="phone"    column="phone"    />
        <result property="address"    column="address"    />
        <result property="createDate"    column="create_date"    />
        <result property="updateDate"    column="update_date"    />
        <result property="state"    column="state"    />
    </resultMap>

    <sql id="selectOrderVo">
        select order_id, user_name, book_name, book_id, price, num, all_price, contact_name, phone, address, create_date, update_date,state from `order`
    </sql>

    <select id="selectOrderList" parameterType="Order" resultMap="OrderResult">
        <include refid="selectOrderVo"/>
        <where>  
            <if test="userName != null  and userName != ''"> and user_name like concat('%', #{userName}, '%')</if>
            <if test="orderId != null  and orderId != ''"> and order_id = #{orderId}</if>
            <if test="bookName != null  and bookName != ''"> and book_name like concat('%', #{bookName}, '%')</if>
            <if test="bookId != null  and bookId != ''"> and book_id = #{bookId}</if>
            <if test="price != null "> and price = #{price}</if>
            <if test="num != null "> and num = #{num}</if>
            <if test="allPrice != null "> and all_price = #{allPrice}</if>
            <if test="contactName != null  and contactName != ''"> and contact_name like concat('%', #{contactName}, '%')</if>
            <if test="phone != null  and phone != ''"> and phone = #{phone}</if>
            <if test="address != null  and address != ''"> and address = #{address}</if>
            <if test="state != null  and state != ''"> and state = #{state}</if>
        </where>
    </select>

<!--    最近一个月中每天已支付订单的数量统计-->
    <select id="selectOrderListAnalysis" parameterType="Order" resultMap="OrderResult">
        SELECT DATE(create_date) AS time,
            COUNT(order_id) AS number
        FROM `order`
        WHERE create_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE()
          AND state = '已支付'
        GROUP BY DATE(create_date)
        ORDER BY DATE(create_date);
    </select>

    <!--    最近一个月销量-->
    <select id="selectOrderListAnalysis1" parameterType="Order" resultMap="OrderResult">
            SELECT book_name,
                COUNT(order_id) AS number
            FROM `order`
            WHERE create_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE()
              AND state = '已支付'
            GROUP BY book_name;
    </select>

    <select id="selectOrderByOrderId" parameterType="String" resultMap="OrderResult">
        <include refid="selectOrderVo"/>
        where order_id = #{orderId}
    </select>
        
    <insert id="insertOrder" parameterType="Order">
        insert into `order`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderId != null">order_id,</if>
            <if test="userName != null">user_name,</if>
            <if test="bookName != null">book_name,</if>
            <if test="bookId != null">book_id,</if>
            <if test="price != null">price,</if>
            <if test="num != null">num,</if>
            <if test="allPrice != null">all_price,</if>
            <if test="contactName != null">contact_name,</if>
            <if test="phone != null">phone,</if>
            <if test="address != null">address,</if>
            <if test="createDate != null">create_date,</if>
            <if test="updateDate != null">update_date,</if>
            <if test="state != null">state,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderId != null">#{orderId},</if>
            <if test="userName != null">#{userName},</if>
            <if test="bookName != null">#{bookName},</if>
            <if test="bookId != null">#{bookId},</if>
            <if test="price != null">#{price},</if>
            <if test="num != null">#{num},</if>
            <if test="allPrice != null">#{allPrice},</if>
            <if test="contactName != null">#{contactName},</if>
            <if test="phone != null">#{phone},</if>
            <if test="address != null">#{address},</if>
            <if test="createDate != null">#{createDate},</if>
            <if test="updateDate != null">#{updateDate},</if>
            <if test="state != null">#{state},</if>
         </trim>
    </insert>

    <update id="updateOrder" parameterType="Order">
        update `order`
        <trim prefix="SET" suffixOverrides=",">
            <if test="userName != null">user_name = #{userName},</if>
            <if test="bookName != null">book_name = #{bookName},</if>
            <if test="bookId != null">book_id = #{bookId},</if>
            <if test="price != null">price = #{price},</if>
            <if test="num != null">num = #{num},</if>
            <if test="allPrice != null">all_price = #{allPrice},</if>
            <if test="contactName != null">contact_name = #{contactName},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="address != null">address = #{address},</if>
            <if test="createDate != null">create_date = #{createDate},</if>
            <if test="updateDate != null">update_date = #{updateDate},</if>
            <if test="state != null">state = #{state},</if>
        </trim>
        where order_id = #{orderId}
    </update>
    <update id="updateState" parameterType="updateOrder">
        update `books`
        JOIN `order` ON books.book_id = `order`.book_id
        set `order`.state='已支付' , books.book_num = books.book_num - #{num}
        where order_id = #{orderId}
    </update>

    <delete id="deleteOrderByOrderId" parameterType="String">
        delete from `order` where order_id = #{orderId}
    </delete>

    <delete id="deleteOrderByOrderIds" parameterType="String">
        delete from `order` where order_id in
        <foreach item="orderId" collection="array" open="(" separator="," close=")">
            #{orderId}
        </foreach>
    </delete>

</mapper>